name: "Destroy Full Stack"

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "DESTROY" to confirm infrastructure destruction'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  validate_confirmation:
    name: "Validate Destruction Confirmation"
    runs-on: ubuntu-latest
    outputs:
      confirmed: ${{ steps.validate.outputs.confirmed }}
    steps:
      - name: Validate Confirmation
        id: validate
        run: |
          if [[ "${{ github.event.inputs.confirm_destroy }}" == "DESTROY" ]]; then
            echo "confirmed=true" >> $GITHUB_OUTPUT
            echo "✅ Destruction confirmed. Proceeding with teardown..."
          else
            echo "confirmed=false" >> $GITHUB_OUTPUT
            echo "❌ Confirmation failed. You must type 'DESTROY' to proceed."
            exit 1
          fi

  destroy_app_runner:
    name: "Destroy App Runner"
    runs-on: ubuntu-latest
    needs: validate_confirmation
    if: ${{ needs.validate_confirmation.outputs.confirmed == 'true' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create .secrets file
        run: |
          echo "${{ secrets.UNIFIED_SECRETS_B64 }}" | base64 -d > .secrets
          chmod 600 .secrets

      - name: Load Environment Variables
        run: |
          export $(cat .secrets | xargs)
          echo "AWS_REGION=${AWS_REGION}" >> $GITHUB_ENV
          echo "AWS_RESOURCES_CREATOR_ACCESS_KEY_ID=${AWS_RESOURCES_CREATOR_ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "AWS_RESOURCES_CREATOR_SECRET_ACCESS_KEY=${AWS_RESOURCES_CREATOR_SECRET_ACCESS_KEY}" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.0"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_RESOURCES_CREATOR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_RESOURCES_CREATOR_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init & Destroy (App Runner)
        working-directory: infra/3-apprunner
        run: |
          terraform init -reconfigure
          terraform destroy -auto-approve

  destroy_resources:
    name: "Destroy AWS Resources"
    runs-on: ubuntu-latest
    needs: destroy_app_runner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create .secrets file
        run: |
          echo "${{ secrets.UNIFIED_SECRETS_B64 }}" | base64 -d > .secrets
          chmod 600 .secrets

      - name: Load Environment Variables
        run: |
          export $(cat .secrets | xargs)
          echo "AWS_REGION=${AWS_REGION}" >> $GITHUB_ENV
          echo "AWS_RESOURCES_CREATOR_ACCESS_KEY_ID=${AWS_RESOURCES_CREATOR_ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "AWS_RESOURCES_CREATOR_SECRET_ACCESS_KEY=${AWS_RESOURCES_CREATOR_SECRET_ACCESS_KEY}" >> $GITHUB_ENV
          echo "TF_VAR_DB_PASSWORD=${TF_VAR_DB_PASSWORD}" >> $GITHUB_ENV
          
          cat <<EOF > infra/2-resources/terraform.tfvars
          db_password = "${TF_VAR_DB_PASSWORD}"
          EOF

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.0"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_RESOURCES_CREATOR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_RESOURCES_CREATOR_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init & Destroy (Resources)
        working-directory: infra/2-resources
        run: |
          if [ -f "terraform.tfstate" ]; then
            terraform init -migrate-state -force-copy
          else
            terraform init -reconfigure
          fi
          terraform destroy -auto-approve -var-file=terraform.tfvars

  destroy_admin:
    name: "Destroy Admin Infrastructure"
    runs-on: ubuntu-latest
    needs: destroy_resources
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create .secrets file
        run: |
          echo "${{ secrets.UNIFIED_SECRETS_B64 }}" | base64 -d > .secrets
          chmod 600 .secrets

      - name: Load Environment Variables
        run: |
          export $(cat .secrets | xargs)
          echo "AWS_REGION=${AWS_REGION}" >> $GITHUB_ENV
          echo "AWS_ADMIN_ACCESS_KEY_ID=${AWS_ADMIN_ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "AWS_ADMIN_SECRET_ACCESS_KEY=${AWS_ADMIN_SECRET_ACCESS_KEY}" >> $GITHUB_ENV
          echo "TF_VAR_PREFIX=${TF_VAR_PREFIX}" >> $GITHUB_ENV
          echo "TF_VAR_RESOURCES_CREATOR_PROFILE=${TF_VAR_RESOURCES_CREATOR_PROFILE}" >> $GITHUB_ENV
          
          cat <<EOF > infra/1-admin/terraform.tfvars
          prefix = "${TF_VAR_PREFIX}"
          resources_creator_profile = "${TF_VAR_RESOURCES_CREATOR_PROFILE}"
          EOF

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.0"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ADMIN_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_ADMIN_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init & Destroy (Admin)
        working-directory: infra/1-admin
        run: |
          terraform init -reconfigure
          terraform destroy -auto-approve -var-file=terraform.tfvars

  cleanup_summary:
    name: "Destruction Summary"
    runs-on: ubuntu-latest
    needs: destroy_admin
    steps:
      - name: Summary
        run: |
          echo "## Infrastructure Destroyed 🗑️" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All AWS resources have been successfully destroyed." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Resources Removed:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ App Runner Service" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Aurora Database" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ ECR Repository" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ VPC and Networking" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ IAM Roles and Policies" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ Note: Check AWS Console to ensure all resources are removed." >> $GITHUB_STEP_SUMMARY